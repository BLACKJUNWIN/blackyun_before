{"remainingRequest":"D:\\BlackJun\\2021\\program\\webstrom\\yun\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\BlackJun\\2021\\program\\webstrom\\yun\\src\\views\\more.vue?vue&type=style&index=0&id=e2be5022&scoped=true&lang=css","dependencies":[{"path":"D:\\BlackJun\\2021\\program\\webstrom\\yun\\src\\views\\more.vue","mtime":1660485836666},{"path":"D:\\BlackJun\\2021\\program\\webstrom\\yun\\node_modules\\css-loader\\dist\\cjs.js","mtime":1659339946691},{"path":"D:\\BlackJun\\2021\\program\\webstrom\\yun\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1659339951534},{"path":"D:\\BlackJun\\2021\\program\\webstrom\\yun\\node_modules\\postcss-loader\\src\\index.js","mtime":1659339948085},{"path":"D:\\BlackJun\\2021\\program\\webstrom\\yun\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1659339948891},{"path":"D:\\BlackJun\\2021\\program\\webstrom\\yun\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1659339949079}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5maWxlOmhvdmVyIHsKICBib3gtc2hhZG93OiAwIDAgMTBweCBncmV5Owp9CgouZmlsZSB7CiAgd2lkdGg6IDEwJTsKICBoZWlnaHQ6IGF1dG87CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIG1hcmdpbjogMzBweDsKICBwYWRkaW5nOiAxNXB4IDIwcHg7CiAgYm9yZGVyLXJhZGl1czogMWVtOwogIGN1cnNvcjogcG9pbnRlcjsKICB0cmFuc2l0aW9uOiBhbGwgNjAwbXMKfQoKLmZpbGVUaXRsZSB7CiAgZm9udC1zaXplOiAxNnB4OwogIG92ZXJmbG93OiBoaWRkZW47CiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICB3aWR0aDogMTAwJTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWFyZ2luLXRvcDogOHB4Cn0KCi5maWxlU3R5bGUgewogIGZvbnQtc2l6ZTogMTZweDsKICBtYXJnaW4tdG9wOiAxM3B4Owp9Cg=="},{"version":3,"sources":["D:\\BlackJun\\2021\\program\\webstrom\\yun\\src\\views\\more.vue"],"names":[],"mappings":";AAigBA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3B;;AAEA,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACtB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAChB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClB","file":"D:/BlackJun/2021/program/webstrom/yun/src/views/more.vue","sourceRoot":"","sourcesContent":["<template>\n  <div style=\"width:80%;margin:0 auto;\">\n    <div>\n      <el-button type=\"primary\" style=\"margin-top: 20px;height: 36px;\" @click=\"backLevel()\"\n                 :disabled=\"$route.query.path==='/'\">\n        <Back style=\"width: 1em; height: 1em; margin-right: 8px\"/>\n        返回\n      </el-button>\n    </div>\n    <div style=\"margin-top:20px\">\n      <el-breadcrumb separator=\"/\">\n        <el-breadcrumb-item :to=\"{path:'/more',query:{path:'/'}}\">黑盘</el-breadcrumb-item>\n        <el-breadcrumb-item v-for=\"(item,index) in records\" :key=\"index\">{{ item }}</el-breadcrumb-item>\n      </el-breadcrumb>\n    </div>\n    <div\n        style=\"display: flex;width: 100%;height: auto;flex-wrap: wrap;box-shadow: 0 0 8px rgba(128,128,128,0.8);background-color:#fafafa;border-radius: 1.5em;margin-top:20px;padding:50px 0\">\n      <div class=\"file\" @click=\"enterFile({name:'temp',level:'/',type:'pack'})\" v-if=\"$route.query.path==='/'\">\n        <img :src=\"getType('pack')\" style=\"width:75%\" alt=\"类型图片\"/>\n        <span class=\"fileTitle\">temp</span>\n      </div>\n      <div v-for=\"(item,index) in currentPack\" :key=\"index\" style=\"\" class=\"file\"\n           :title=\"clearType(item.name)+'.'+item.type\"\n           @contextmenu.prevent=\"currentFile=item;fileManage=true;\" @click=\"enterFile(item)\">\n        <img :src=\"getType(item.type)\" style=\"width:75%\" alt=\"类型图片\"/>\n        <span class=\"fileTitle\">{{ clearType(item.name) }}</span>\n      </div>\n      <div v-if=\"currentPack===null||currentPack.length<=0&&$route.query.path!=='/'\"\n           style=\"text-align: center;width: 100%\">\n        <img src=\"@/assets/images/none.svg\" alt=\"啥也没有\"/>\n        <div style=\"font-weight: bold;font-size: 20px;color: #61b3ec\"><span style=\"color: black\">黑</span>盘里什么也没有</div>\n      </div>\n    </div>\n\n    <div style=\"display: flex;justify-content: right;margin:30px 0;width: 100%;\">\n      <input type=\"file\" style=\"display: none\" id=\"upload\" @change=\"fileParse()\">\n      <el-button type=\"primary\" plain style=\"font-weight: bold;height: 36px\" @click=\"clickUpload()\">上传文件</el-button>\n      <el-button type=\"success\" plain style=\"font-weight: bold;height: 36px\" @click=\"addMkdir=true;\">新建文件夹</el-button>\n    </div>\n    <!--    文件操作弹窗-->\n    <el-dialog\n        title=\"文件管理\"\n        v-model=\"fileManage\"\n        width=\"41%\"\n        center>\n      <div style=\"display:flex;width:80%;height: 200px;text-align: center;margin:10px auto 0 auto;\"\n           v-if=\"currentFile!=null||currentFile!=={}\">\n        <div>\n          <img :src=\"getType(currentFile.type)\" style=\"height:100%\" alt=\"样式\"/>\n        </div>\n        <div\n            style=\"text-align: left;display: flex;flex-flow: column;justify-content: space-between;height: 160px;margin-top:10px\">\n          <div class=\"fileStyle\"><strong>文件名:</strong>&nbsp;{{ clearType(currentFile.name) }}</div>\n          <div class=\"fileStyle\"><strong>类型:</strong>&nbsp;{{ currentFile.type }}</div>\n          <div class=\"fileStyle\">\n            <strong>路径<br></strong>黑盘{{ currentFile.level }}{{ clearType(currentFile.name) }}.{{ currentFile.type }}\n          </div>\n          <div class=\"fileStyle\">\n            <strong>大小<br></strong>{{\n              (currentFile.size / 1024).toFixed(3)\n            }}KB&nbsp,&nbsp约{{ (parseFloat(currentFile.size) / 1024 / 1024).toFixed(2) }}MB\n          </div>\n        </div>\n      </div>\n      <el-dialog\n          v-model=\"fileManageInner\"\n          width=\"30%\"\n          title=\"软件分享\"\n          append-to-body>\n        <el-form label-width=\"80px\">\n          <el-form-item label=\"软件名\" style=\"font-weight: bold\" required>\n            <el-input name='fileName' v-model=\"shareFile.name\" placeholder=\"请输入软件名\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"分类名\" style=\"font-weight: bold\" required>\n            <el-select v-model=\"shareFile.categoryId\">\n              <el-option\n                  v-for=\"item in category\"\n                  :key=\"item.id\"\n                  :label=\"item.category\"\n                  :value=\"item.id\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"软件官网\" style=\"font-weight: bold\">\n            <el-input name='url' v-model=\"shareFile.url\" placeholder=\"请输入官网网址\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"图标\" style=\"font-weight: bold\">\n            <el-button v-if=\"!shareFile.uploadIcon\" type=\"primary\" @click=\"clickUploadImage()\" style=\"margin-right: 10px\">上传\n            </el-button>\n            <div v-if=\"!shareFile.uploadIcon\">图标大小不能大于500kb</div>\n            <input type=\"file\" id=\"icon\" style=\"display: none\" @change=\"uploadImages()\"/>\n            <div>\n              <img class=\"el-upload-list__item-thumbnail\" :src=\"shareFile.uploadIcon\" alt=\"\" v-if=\"shareFile.uploadIcon\" style=\"width:60%\"/>\n            </div>\n          </el-form-item>\n        </el-form>\n        <span slot=\"footer\" class=\"dialog-footer\" style=\"display: flex;justify-content: center;margin-top: 25px\">\n        <el-button type=\"info\" @click=\"fileManageInner = false\">取 消</el-button>\n        <el-button type=\"warning\" @click=\"fileManageInner=false;uploadShareFile()\">分享</el-button>\n       </span>\n      </el-dialog>\n      <span slot=\"footer\" class=\"dialog-footer\" style=\"display: flex;justify-content: center;margin-top: 25px\">\n        <el-button type=\"info\" @click=\"fileManage = false\">取 消</el-button>\n        <el-button type=\"danger\" @click=\"fileManage = false;deleteFile()\">删除</el-button>\n        <el-button type=\"success\" @click=\"fileManage = false;onlineFile()\"\n                   :disabled=\"!(currentFile.type==='txt'||currentFile.type==='jpg'||currentFile.type==='png'||currentFile.type==='xml')\"\n                   title=\"仅支持txt,jpg,png格式\">预览</el-button>\n        <el-button type=\"primary\" @click=\"fileManage = false;downFile(currentFile)\">下载</el-button>\n        <el-button type=\"warning\"\n                   @click=\"fileManageInner=true;shareFile.name=clearType(currentFile.name);shareFile.fileId=currentFile.file_id;shareFile.uploadIcon=''\">分享</el-button>\n       </span>\n    </el-dialog>\n    <!--    文件操作弹窗-->\n    <el-dialog title=\"新增文件夹\"\n               v-model=\"addMkdir\"\n               width=\"30%\"\n               center>\n      <el-form-item label=\"文件名\" style=\"font-weight: bold\">\n        <el-input name='fileName' v-model=\"mkdirName\" placeholder=\"请输入文件名\"></el-input>\n      </el-form-item>\n      <span slot=\"footer\" class=\"dialog-footer\" style=\"display: flex;justify-content: center;margin-top: 25px;\">\n        <el-button type=\"info\" @click=\"addMkdir = false\" style=\"width:60px;height: 36px;\">取 消</el-button>\n        <el-button type=\"success\" style=\"width:60px;height: 36px\" @click=\"newMkdir()\">新增</el-button>\n       </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {Back, Delete, Plus, ZoomIn} from \"@element-plus/icons\";\nimport {\n  showPack,\n  removeFilePath,\n  net_newMkdir,\n  net_fileExist,\n  net_uploadSliceFile,\n  net_fileCombined,\n  net_uploadCancel, net_categoryList, net_shareFile, net_uploadImage,\n} from \"@/net/file\";\nimport {useRoute, useRouter} from \"vue-router\";\nimport {reactive, toRefs, watch} from \"vue\";\nimport {useStore} from \"vuex\";\nimport {RealBaseUrl} from \"@/net/request\";\nimport SparkMD5 from \"spark-md5\";\n\nexport default {\n  name: \"more\",\n  components: {\n    Back,\n    Delete,\n    Plus,\n    ZoomIn\n  },\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const store = useStore();\n    watch(route, (newValue, oldValue) => {\n      if (newValue.path === \"/more\") {\n        enterPack();\n      }\n    })\n    //基础属性\n    let fileData = reactive({\n      currentPack: [],\n      currentFile: {},\n      fileManage: false,\n      fileManageInner: false,\n      addMkdir: false,\n      mkdirName: \"\",\n      records: [],\n      abortController: new AbortController()\n    })\n\n    let file = reactive({\n      sliceTotal: 0,\n      hash: \"\",\n      uploadList: [],\n      uploadFileName: \"\",\n      uploadFileRealName: \"\",\n      fileUploaded: 0,\n      category: [],\n      shareFile: {\n        name: \"\",\n        categoryId: \"1534448966809767937\",\n        fileId: 0,\n        url: \"\",\n        uploadIcon: \"\"\n      },\n    })\n    let clickUploadImage = () => {\n      document.querySelector(\"#icon\").click();\n    }\n    //上传图片接口\n    let uploadImages = async () => {\n      let formData = new FormData();\n      let icon = document.querySelector(\"#icon\").files[0];\n      if (icon.size > 1024 * 1024) {\n        let res = {\n          code: \"500\",\n          message: \"图标大于500kb,请重新上传\"\n        }\n        store.commit(\"tip\", res);\n      } else {\n        formData.append(\"file\", icon);\n        formData.append(\"category\", \"icon\");\n        let res = (await net_uploadImage(formData));\n        file.shareFile.uploadIcon = res.data.path;\n      }\n      document.querySelector(\"#icon\").value = \"\";\n    }\n\n    //文件分享\n    let uploadShareFile = async () => {\n      let res = await net_shareFile(file.shareFile);\n      if (res.code === \"200\") {\n        let res = {\n          code: \"201\",\n          message: \"分享成功,等待管理员审核!\"\n        }\n        store.commit(\"tip\", res);\n      } else {\n        store.commit(\"tip\", res);\n      }\n    }\n\n    //进入对应文件夹\n    let enterPack = async () => {\n      fileData.currentPack = (await showPack({\n        \"level\": route.query.path\n      })).data;\n      fileData.records = route.query.path.substring(1).split(\"/\");\n    }\n    //进入文件时\n    let enterFile = (file) => {\n      if (file.type === \"pack\") {\n        router.push({path: \"/more\", query: {path: file.level + file.name + \"/\"}})\n        enterPack();\n      } else {\n        fileData.currentFile = file;\n        fileData.fileManage = true;\n      }\n    }\n\n    //获取文件样式并展示对应样式图片\n    let getType = (type) => {\n      try {\n        return require(\"@/assets/images/fileType/\" + type + \".svg\");\n      } catch (e) {\n        return require(\"@/assets/images/fileType/null.svg\");\n      }\n    }\n\n    //返回上一级\n    let backLevel = () => {\n      let level = route.query.path.substring(0, route.query.path.length - 1);\n      let oldLevel = level.substring(0, level.lastIndexOf(\"/\") + 1)\n      if (oldLevel.length <= 0) {\n        oldLevel = \"/\";\n      }\n      router.push({path: \"/more\", query: {path: oldLevel}});\n      enterPack();\n    }\n\n    //删除文件路径\n    let deleteFile = async () => {\n      let res = await removeFilePath(fileData.currentFile.id);\n      store.commit(\"tip\", res);\n      await enterPack();\n    }\n\n    //在线浏览文件\n    let onlineFile = () => {\n      window.open(RealBaseUrl + \"/upload/temp/\" + fileData.currentFile.realName, '_blank');\n    }\n\n    //下载文件\n    let downFile = () => {\n      window.open(RealBaseUrl + \"/v1/down?md5=\" + fileData.currentFile.md5, '_blank');\n    }\n\n    //新增文件夹\n    let newMkdir = async () => {\n      if (fileData.mkdirName === \"\") {\n        let res = {\n          code: \"500\",\n          message: \"请先输入文件名\"\n        }\n        store.commit(\"tip\", res);\n      } else {\n        let res = await net_newMkdir({\n          fileName: fileData.mkdirName,\n          level: route.query.path\n        })\n        await enterPack();\n        fileData.mkdirName = \"\";\n        store.commit(\"tip\", res);\n        fileData.addMkdir = false;\n      }\n    }\n\n    //清除文件后缀样式\n    let clearType = (fileName) => {\n      let index = fileName.lastIndexOf(\".\");\n      if (index === -1) {\n        return fileName;\n      }\n      return fileName.substring(0, index);\n    }\n\n    watch(() => store.state.uploadCancel, async (newData, oldData) => {\n      if (newData) {\n        await net_uploadCancel(store.state.uploadMd5 + store.state.uploadFileName.substring(store.state.uploadFileName.lastIndexOf(\".\")))\n        document.querySelector('#upload').value = \"\";\n        sessionStorage.removeItem(\"uploadIndexMax\")\n        sessionStorage.removeItem(\"uploadPath\");\n        sessionStorage.removeItem(\"uploadFileName\");\n        sessionStorage.removeItem(\"uploadMd5\");\n        store.state.uploadIndexMax = 1;\n        store.state.uploadPath = \"\";\n        store.state.uploadFileName = \"\";\n        store.state.uploadMd5 = \"\";\n        let res = {\n          code: \"201\",\n          message: \"文件取消上传!\"\n        }\n        store.commit(\"tip\", res);\n      }\n    })\n\n    //调用原生上传按钮\n    let clickUpload = () => {\n      document.querySelector('#upload').click();\n    }\n    //文件上传开始,分流\n    let uploadFile = async function () {\n      //获取文件并创建传递data数组\n      store.state.loading = false;\n      let fileData = document.querySelector('#upload').files[0];\n      let res = (await net_fileExist({md5: file.hash, path: route.query.path, name: fileData.name}));\n      if (res.code !== \"200\") {\n        file.sliceTotal = Math.ceil(fileData.size / (1024 * 1024));\n        file.uploadFileName = fileData.name;\n        file.uploadFileRealName = file.hash + fileData.name.substring(fileData.name.lastIndexOf(\".\"));\n        await fileSlice(fileData);\n      } else {\n        let res = {\n          code: \"201\",\n          message: \"达到秒传条件,上传成功!\"\n        }\n        await enterPack();\n        store.commit(\"tip\", res);\n        //清空文件\n        document.querySelector('#upload').value = \"\";\n      }\n    }\n    //文件解析完后开始上传\n    let fileParse = async () => {\n      store.state.loading = true;\n      //获取文件并创建传递data数组\n      let fileData = document.querySelector('#upload').files[0];\n      //获取buffer模式文件,并创建md5码\n      let sparkMD5 = new SparkMD5.ArrayBuffer();\n      let fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(fileData);//将文件转为buffer模式\n      fileReader.onload = async (e) => {\n        sparkMD5.append(e.target.result);\n        file.hash = sparkMD5.end(false);\n        await uploadFile();\n      }\n    }\n\n    //文件拆分\n    let fileSlice = async (fileData) => {\n      let cur = 0;\n      for (let i = 0; i < file.sliceTotal; i++) {\n        let item = {\n          raw: fileData.slice(cur * 1024 * 1024, (cur + 1) * 1024 * 1024),\n          index: i,\n          name: file.uploadFileName,\n          total: file.sliceTotal\n        }\n        file.uploadList.push(item);\n        cur++;\n      }\n      if (store.state.uploadMd5) {\n        if (sessionStorage.getItem(\"uploadMd5\") === file.hash) {\n          let res = {\n            code: \"201\",\n            message: \"文件完成验证,正在继续上传!\"\n          }\n          store.commit(\"tip\", res);\n          await responseFiles(parseInt(sessionStorage.getItem(\"uploadIndex\")));\n        } else {\n          let res = {\n            code: \"500\",\n            message: \"与原文件不符,正在上传新文件!\"\n          }\n          store.commit(\"tip\", res);\n          sessionStorage.removeItem(\"uploadIndexMax\")\n          sessionStorage.removeItem(\"uploadIndex\")\n          sessionStorage.removeItem(\"uploadPath\");\n          sessionStorage.removeItem(\"uploadFileName\");\n          sessionStorage.removeItem(\"uploadMd5\");\n          store.state.uploadIndexMax = 1;\n          store.state.uploadPath = \"\";\n          store.state.uploadFileName = \"\";\n          store.state.uploadMd5 = \"\";\n          await responseFiles();\n        }\n      }\n      await responseFiles();\n      file.uploadList = [];\n      file.sliceTotal = 0;\n    }\n\n    //文件分段上传\n    let responseFiles = async (index = 0) => {\n      store.state.uploadIndexMax = file.uploadList.length;\n      store.state.uploadPath = route.query.path;\n      store.state.uploadFileName = file.uploadFileName;\n      store.state.uploadMd5 = file.hash;\n      sessionStorage.setItem(\"uploadIndexMax\", file.uploadList.length + \"\");\n      sessionStorage.setItem(\"uploadPath\", route.query.path + \"\");\n      sessionStorage.setItem(\"uploadFileName\", file.uploadFileName);\n      sessionStorage.setItem(\"uploadMd5\", file.hash);\n      await uploadFileUpload();\n      if (file.fileUploaded === 1) {\n        let res = await net_fileCombined({\n          md5: file.hash,\n          realName: file.uploadFileRealName,\n          name: file.uploadFileName,\n          path: route.query.path\n        });\n        await enterPack();\n        store.commit(\"tip\", res);\n        file.fileUploaded = 0;\n      }\n      //清空文件\n      document.querySelector('#upload').value = \"\";\n      sessionStorage.removeItem(\"uploadIndex\")\n      sessionStorage.removeItem(\"uploadIndexMax\")\n      sessionStorage.removeItem(\"uploadPath\");\n      sessionStorage.removeItem(\"uploadFileName\");\n      sessionStorage.removeItem(\"uploadMd5\");\n      store.state.uploadCancel = false;\n      store.state.uploadIndexMax = 1;\n      store.state.uploadPath = \"\";\n      store.state.uploadFileName = \"\";\n      store.state.uploadMd5 = \"\";\n    }\n\n    let uploadFileUpload = async (index = -1) => {\n      index += 1;\n      if (index === store.state.uploadIndexMax) {\n        file.fileUploaded = 1;\n        return 0;\n      }\n      store.state.uploadIndex = index;\n      sessionStorage.setItem(\"uploadIndex\", index + \"\");\n      let uploadData = new FormData();\n      uploadData.append(\"fileName\", file.uploadFileRealName);\n      uploadData.append(\"file\", file.uploadList[index].raw);\n      uploadData.append(\"index\", file.uploadList[index].index);\n      uploadData.append(\"total\", file.sliceTotal);\n      uploadData.append(\"md5\", file.hash);\n      uploadData.append(\"path\", route.query.path + \"\");\n      uploadData.append(\"name\", file.uploadFileName);\n      let res = await net_uploadSliceFile(uploadData);\n      if (res.code === \"200\") {\n        if (store.state.uploadCancel) {\n          return 0;\n        }\n        await uploadFileUpload(parseInt(res.data))\n      } else {\n        let res = {\n          code: \"500\",\n          message: \"上传中断!\"\n        }\n        store.commit(\"tip\", res);\n        store.state.uploadInterrupt = true;\n      }\n    }\n\n    return {\n      ...toRefs(fileData),\n      ...toRefs(file),\n      getType,\n      enterPack,\n      enterFile,\n      backLevel,\n      deleteFile,\n      onlineFile,\n      downFile,\n      newMkdir,\n      clearType,\n      fileParse,\n      fileSlice,\n      responseFiles,\n      clickUpload,\n      uploadShareFile,\n      uploadImages,\n      clickUploadImage\n    }\n  },\n  async created() {\n    this.enterPack();\n    this.category = (await net_categoryList()).data;\n  },\n}\n</script>\n\n<style scoped>\n.file:hover {\n  box-shadow: 0 0 10px grey;\n}\n\n.file {\n  width: 10%;\n  height: auto;\n  text-align: center;\n  margin: 30px;\n  padding: 15px 20px;\n  border-radius: 1em;\n  cursor: pointer;\n  transition: all 600ms\n}\n\n.fileTitle {\n  font-size: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 100%;\n  display: inline-block;\n  margin-top: 8px\n}\n\n.fileStyle {\n  font-size: 16px;\n  margin-top: 13px;\n}\n</style>\n"]}]}